================================================================================
               DOCUMENTACIÓN DEL SCRIPT - Corner.py
================================================================================

AUTOR: Script de Automatización WordPress
VERSIÓN: 2.0
FECHA: 2025
SITIO WEB: https://cornergourmet.es

================================================================================
1. ¿QUÉ HACE ESTE SCRIPT?
================================================================================

Este script automatiza la publicación de contenido en WordPress desde documentos
Word (.docx). Lee archivos Word con un formato específico y crea automáticamente
borradores de posts en WordPress con:

✓ Título del artículo
✓ Descripción con formato HTML (negritas, cursivas, listas)
✓ Frase clave objetivo (SEO)
✓ Título SEO  
✓ Meta descripción
✓ Categorías (crea las que no existan)

DIFERENCIA CLAVE:
-----------------
Este script está diseñado para WordPress con EDITOR GUTENBERG (bloques).
Si tu WordPress usa el editor clásico, consulta la documentación de EstarDeModa.py

================================================================================
2. REQUISITOS PREVIOS
================================================================================

INSTALACIONES NECESARIAS:
-------------------------
1. Python 3.9 o superior
2. Google Chrome (navegador)
3. Módulos Python:
   - python-docx (para leer archivos Word)
   - selenium (para automatizar el navegador)

INSTALACIÓN DE MÓDULOS:
-----------------------
Ejecutar en la terminal:
    pip install python-docx selenium

================================================================================
3. CONFIGURACIÓN DEL SCRIPT
================================================================================

UBICACIÓN: Líneas 17-20 del script

PARÁMETROS A CONFIGURAR:
------------------------
1. url_wp: URL del panel de administración de WordPress
   Ejemplo: 'https://cornergourmet.es/wp-admin'

2. usuario_wp: Nombre de usuario de WordPress
   Ejemplo: 'admin5874'

3. password_wp: Contraseña de WordPress
   Ejemplo: 'tu_contraseña_aquí'

4. carpeta_word: Ruta completa a la carpeta con archivos Word
   Ejemplo: r"C:\Users\Jonathan JD\Desktop\pink\Robert\CodigoCorner 1"

IMPORTANTE: Mantén estas credenciales seguras y no las compartas.

================================================================================
4. ESTRUCTURA DEL DOCUMENTO WORD
================================================================================

El documento Word DEBE tener la siguiente estructura:

FORMATO REQUERIDO:
------------------

Titulo de la ficha
[nombre del artículo aquí]

Descripción:
[contenido del artículo con formato]
- Puedes usar negritas
- Puedes usar cursivas  
- Puedes crear listas
- Puedes usar subrayado

Frase clave objetivo
[palabra clave principal para SEO]

Título SEO
[título optimizado para motores de búsqueda]

Meta description
[descripción breve de 150-160 caracteres]

Categorías
[Categoría 1, Categoría 2, Categoría 3]
(Separadas por comas)

NOTAS IMPORTANTES:
------------------
✓ Los títulos de sección pueden estar con o sin tilde
✓ Las categorías se pueden separar por comas en una sola línea
✓ Si una categoría no existe, el script la creará automáticamente
✓ El formato (negritas, cursivas) se preserva automáticamente
✓ Las listas se convierten automáticamente a HTML
✓ El script NO maneja etiquetas (específico de Corner)

================================================================================
5. ¿CÓMO FUNCIONA EL SCRIPT? - PASO A PASO
================================================================================

FASE 1: INICIALIZACIÓN
----------------------
1. Lee todos los archivos .docx de la carpeta configurada
2. Ignora archivos temporales (que empiezan con ~$)
3. Muestra cuántos archivos encontró
4. Abre el navegador Chrome automáticamente

FASE 2: LOGIN EN WORDPRESS
---------------------------
5. Navega a la página de login de WordPress
6. Introduce usuario y contraseña automáticamente
7. Hace clic en el botón de login
8. Espera a que cargue el panel de administración

FASE 3: PROCESAMIENTO DE CADA ARCHIVO (se repite para cada documento)
----------------------------------------------------------------------

3.1 LECTURA DEL DOCUMENTO:
   - Abre el archivo Word
   - Extrae el título (busca "Titulo de la ficha" y variaciones)
   - Extrae la descripción (busca "Descripción:" y su contenido)
   - Convierte el formato Word a HTML:
     * Negritas → <strong>
     * Cursivas → <em>
     * Subrayado → <u>
     * Listas → <ul><li>
   - Extrae frase clave objetivo
   - Extrae título SEO
   - Extrae meta descripción
   - Extrae categorías (divide por comas si hay varias)

3.2 CREACIÓN DEL POST EN WORDPRESS (Editor Gutenberg):
   a) Navega a "Añadir nueva entrada"
   b) Inserta el título en el campo correspondiente
   
   c) Inserta la descripción usando el Editor de Código de Gutenberg:
      - Hace clic en "Opciones" (tres puntos)
      - Selecciona "Editor de código"
      - Pega el contenido HTML formateado
      - Sale del editor de código
   
   d) Inserta la frase clave en Yoast SEO
   
   e) Inserta la meta descripción en Yoast SEO
   
   f) Configura las categorías:
      - Abre el panel de categorías
      - Busca cada categoría en la lista
      - Si existe: la selecciona (con JavaScript para evitar errores)
      - Si NO existe:
        * Hace clic en "Añadir categoría"
        * Escribe el nombre en el campo
        * Hace clic en "Añadir nueva categoría" (botón azul)
        * La selecciona automáticamente

3.3 GUARDADO:
   - Hace clic en "Guardar borrador"
   - Verifica que se guardó correctamente
   - Si falla, intenta con método alternativo (Ctrl+S)
   - Muestra mensaje de éxito o error

FASE 4: FINALIZACIÓN
---------------------
9. Repite FASE 3 para cada archivo Word encontrado
10. Muestra resumen final:
    - Total de archivos procesados
    - Archivos guardados exitosamente
    - Archivos fallidos (si los hay)
11. Cierra el navegador automáticamente

================================================================================
6. ¿CÓMO USAR EL SCRIPT?
================================================================================

PASO 1: PREPARAR LOS DOCUMENTOS WORD
-------------------------------------
- Crea tus documentos Word con el formato descrito arriba
- Guárdalos en la carpeta configurada en el script
- Asegúrate de que tengan extensión .docx

PASO 2: CONFIGURAR EL SCRIPT
-----------------------------
- Abre el archivo Corner.py con un editor de texto
- Modifica las líneas 17-20 con tus datos
- Guarda los cambios

PASO 3: EJECUTAR EL SCRIPT
---------------------------
Opción A - Desde la terminal:
    1. Abre la terminal/PowerShell
    2. Navega a la carpeta del script:
       cd "C:\Users\Jonathan JD\Desktop\pink\Robert\CodigoCorner 1"
    3. Ejecuta:
       python Corner.py

Opción B - Desde el editor:
    1. Abre el archivo en VS Code u otro editor
    2. Presiona F5 o clic en "Run"

PASO 4: OBSERVAR EL PROCESO
----------------------------
- El navegador Chrome se abrirá automáticamente
- Verás cómo se van procesando los archivos
- En la consola verás mensajes de progreso:
  [INFO] - Información general
  [OK] - Operación exitosa
  [WARNING] - Advertencia (no crítico)
  [ERROR] - Error (requiere atención)
  [DEBUG] - Información de depuración
  [SUCCESS] - Proceso completado exitosamente

PASO 5: VERIFICAR RESULTADOS
-----------------------------
- Al finalizar, verás un resumen en la consola
- Ve a tu WordPress → Entradas → Borradores
- Verifica que los posts se crearon correctamente
- Revisa y publica cuando estés listo

================================================================================
7. MENSAJES DEL SCRIPT - QUÉ SIGNIFICAN
================================================================================

[INFO] Se encontraron 5 archivos Word
    → El script encontró 5 documentos .docx para procesar

[INFO] Procesando: Receta_Vino.docx
    → Está procesando ese archivo específico

[INFO] Título: Guía de Vinos Españoles
    → Extrajo el título correctamente

[WARNING] Descripción: [VACÍA - REVISAR DOCUMENTO]
    → No encontró la descripción, revisa el formato del Word

[DEBUG] Total de categorías detectadas: 2
    → Encontró 2 categorías en el documento

[DEBUG] Categorías a procesar: Vinos, Gastronomía
    → Lista completa de categorías detectadas

[OK] Categoría seleccionada: Vinos
    → Seleccionó una categoría existente

[INFO] Intentando crear nueva categoría: 'Enoturismo'
    → Va a crear una categoría nueva porque no existe

[SUCCESS] Categoría 'Enoturismo' creada exitosamente
    → Creó la nueva categoría correctamente

[OK] Categoría 'Enoturismo' seleccionada después de crearla
    → La nueva categoría fue seleccionada

[SUCCESS] Post 'Guía de Vinos' guardado como borrador con éxito!
    → El post se guardó correctamente en WordPress

================================================================================
8. DIFERENCIAS CON OTROS SCRIPTS
================================================================================

CORNER.PY vs ESTARDEMODA.PY:
----------------------------

| Característica          | Corner.py (Gutenberg) | EstarDeModa.py (Clásico) |
|------------------------|----------------------|--------------------------|
| Editor WordPress       | Gutenberg (bloques)   | Editor Clásico           |
| Inserción contenido    | Editor de código      | Visual Composer          |
| Creación categorías    | Panel lateral         | Formulario inferior      |
| Etiquetas             | No soporta            | Sí soporta               |
| Selectores CSS        | Modernos (Gutenberg)  | Tradicionales (Clásico)  |

CUÁNDO USAR CORNER.PY:
----------------------
✓ Tu WordPress usa el editor Gutenberg (bloques)
✓ Ves "Añadir bloque" cuando creas posts
✓ La interfaz es moderna con bloques arrastrables

CUÁNDO USAR ESTARDEMODA.PY:
----------------------------
✓ Tu WordPress usa el editor clásico
✓ Usas Visual Composer
✓ Ves una interfaz tradicional tipo documento

================================================================================
9. RESOLUCIÓN DE PROBLEMAS
================================================================================

PROBLEMA: "ModuleNotFoundError: No module named 'docx'"
SOLUCIÓN: Instalar el módulo python-docx
    pip install python-docx

PROBLEMA: "ModuleNotFoundError: No module named 'selenium'"
SOLUCIÓN: Instalar selenium
    pip install selenium

PROBLEMA: "Unable to locate or obtain driver"
SOLUCIÓN: El script usa Chrome automáticamente. Asegúrate de tener Chrome instalado.

PROBLEMA: Título o descripción vacíos
SOLUCIÓN: Verifica que tu documento Word tenga exactamente:
    - "Titulo de la ficha" (o variaciones)
    - "Descripción:" (o variaciones)

PROBLEMA: No encuentra el "Editor de código"
SOLUCIÓN:
    1. Verifica que uses WordPress con Gutenberg
    2. Si usas editor clásico, usa EstarDeModa.py en su lugar
    3. Actualiza WordPress a la última versión

PROBLEMA: Categorías no se crean
SOLUCIÓN:
    1. Verifica que el usuario tenga permisos para crear categorías
    2. Revisa que estén separadas por comas
    3. Mira los mensajes [DEBUG] para ver qué detectó

PROBLEMA: "No se encontró el botón de opciones"
SOLUCIÓN:
    1. Puede ser que WordPress esté en español/inglés
    2. El script busca ambas versiones automáticamente
    3. Verifica que la página se haya cargado completamente

PROBLEMA: Error "element click intercepted"
SOLUCIÓN: Ya está resuelto con JavaScript click automático

PROBLEMA: La descripción no aparece formateada
SOLUCIÓN: 
    1. Verifica que el contenido HTML se insertó correctamente
    2. El script usa el editor de código de Gutenberg
    3. Revisa que el bloque sea de tipo "HTML personalizado"

================================================================================
10. CARACTERÍSTICAS AVANZADAS
================================================================================

PROCESAMIENTO EN LOTE:
----------------------
Procesa TODOS los archivos .docx de la carpeta automáticamente.

RECUPERACIÓN DE ERRORES:
------------------------
Si un archivo falla, continúa con los siguientes.
Incluye mecanismo de reinicio del navegador si hay errores críticos.

JAVASCRIPT CLICK:
-----------------
Usa JavaScript para hacer clic en checkboxes de categorías,
evitando que la barra de administración bloquee las acciones.

CREACIÓN AUTOMÁTICA DE CATEGORÍAS:
----------------------------------
Proceso completo:
1. Busca la categoría por texto exacto
2. Si no encuentra, busca por coincidencia parcial
3. Si aún no encuentra, crea la categoría nueva
4. Selecciona la categoría automáticamente

DETECCIÓN FLEXIBLE:
------------------
Busca títulos y descripciones con múltiples variaciones:
- "Titulo de la ficha", "Título de la ficha"
- "Descripción:", "Descripcion:"
- Con o sin dos puntos
- En mayúsculas o minúsculas

FORMATO MÚLTIPLE:
-----------------
Soporta texto con varios formatos simultáneos:
<strong><em><u>Texto en negrita, cursiva y subrayado</u></em></strong>

DIVISIÓN DE CATEGORÍAS:
-----------------------
Categorías: Vinos, Gastronomía, Recetas
        ↓           ↓           ↓
   ["Vinos", "Gastronomía", "Recetas"]

AGRUPACIÓN DE LISTAS HTML:
---------------------------
Listas consecutivas se agrupan correctamente:
<ul>
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
</ul>

================================================================================
11. MANTENIMIENTO Y ACTUALIZACIONES
================================================================================

CAMBIAR CREDENCIALES:
---------------------
Edita las líneas 17-20 del script con las nuevas credenciales.

CAMBIAR CARPETA DE ARCHIVOS:
----------------------------
Modifica la línea 20 (carpeta_word) con la nueva ruta.

ACTUALIZAR PYTHON:
------------------
Si actualizas Python, reinstala los módulos:
    pip install --upgrade python-docx selenium

VER VERSIÓN DEL SCRIPT:
-----------------------
Línea 2 del script o línea 5 de este documento.

CAMBIAR TIMEOUT:
----------------
Línea 629: wait = WebDriverWait(driver, 30)
El 30 son segundos. Aumenta si tu conexión es lenta.

================================================================================
12. ESTRUCTURA INTERNA DEL SCRIPT
================================================================================

FUNCIONES PRINCIPALES:
----------------------

1. obtener_archivos_word(carpeta)
   → Lista todos los .docx de la carpeta

2. extraer_titulo(doc)
   → Extrae el título del documento Word

3. extraer_descripcion_con_formato(doc)
   → Extrae y convierte la descripción a HTML

4. frase_clave(doc)
   → Extrae la frase clave objetivo

5. titulo_seo(doc)
   → Extrae el título SEO

6. meta_description(doc)
   → Extrae la meta descripción

7. leer_categorias(doc)
   → Extrae categorías y las divide por comas

8. crear_nueva_categoria(driver, wait, nombre_categoria)
   → Crea una nueva categoría en WordPress

9. guardar_borrador(driver, wait)
   → Guarda el post como borrador

10. procesar_archivo(archivo_word, driver, wait)
    → Función principal que procesa un archivo completo

11. main()
    → Función que coordina todo el proceso

================================================================================
13. LIMITACIONES Y CONSIDERACIONES
================================================================================

✓ Solo procesa archivos .docx (no .doc antiguos)
✓ Requiere conexión a internet estable
✓ Requiere permisos de administrador en WordPress
✓ El navegador debe permanecer abierto durante el proceso
✓ No cierres la ventana del navegador manualmente
✓ Los archivos Word deben seguir el formato especificado
✓ Crea BORRADORES, no publica automáticamente (por seguridad)
✓ Requiere WordPress con editor Gutenberg activado
✓ No soporta etiquetas (solo categorías)
✓ No soporta imágenes (solo texto)

================================================================================
14. BUENAS PRÁCTICAS
================================================================================

ANTES DE EJECUTAR:
------------------
1. Haz backup de tu base de datos WordPress
2. Prueba con 1-2 archivos primero
3. Verifica que el formato Word sea consistente
4. Asegúrate de tener buena conexión a internet

DURANTE LA EJECUCIÓN:
---------------------
1. No cierres el navegador manualmente
2. No interrumpas el script (Ctrl+C solo en emergencia)
3. Observa los mensajes en la consola
4. Si ves muchos [ERROR], detén y revisa

DESPUÉS DE EJECUTAR:
--------------------
1. Revisa los borradores en WordPress
2. Verifica que el formato se preservó
3. Comprueba que las categorías están correctas
4. Publica solo después de revisar

ORGANIZACIÓN:
-------------
1. Mantén los archivos Word en carpetas separadas
2. Usa nombres descriptivos para los archivos
3. Procesa lotes pequeños (5-10 archivos máximo)
4. Guarda un log del proceso para referencia

================================================================================
15. PREGUNTAS FRECUENTES (FAQ)
================================================================================

P: ¿Puedo usar el script sin modificar WordPress?
R: Sí, no modifica configuraciones, solo crea contenido.

P: ¿Se pueden procesar 100 archivos a la vez?
R: Técnicamente sí, pero es mejor hacerlo en lotes de 10-20.

P: ¿Qué pasa si se cae internet durante el proceso?
R: El script fallará. Vuelve a ejecutarlo, solo procesará los que faltaron.

P: ¿Se pueden subir imágenes automáticamente?
R: No, esta versión solo maneja texto formateado.

P: ¿Puedo programar el script para que se ejecute solo?
R: Sí, usando herramientas como Windows Task Scheduler.

P: ¿El script publica automáticamente?
R: No, solo crea borradores por seguridad.

P: ¿Funciona en Mac o Linux?
R: Sí, solo ajusta las rutas de carpetas (usar / en lugar de \).

P: ¿Puedo procesar archivos de Google Docs?
R: Primero descárgalos como .docx, luego sí.

P: ¿Qué pasa con los borradores duplicados?
R: WordPress los tratará como posts separados. Elimina los duplicados manualmente.

P: ¿Es seguro guardar las credenciales en el script?
R: Para uso personal sí, pero nunca compartas el archivo con otros.

================================================================================
16. SOPORTE Y MEJORAS FUTURAS
================================================================================

POSIBLES MEJORAS:
-----------------
□ Soporte para imágenes
□ Soporte para videos embebidos
□ Publicación automática (opcional)
□ Programación de posts
□ Soporte para etiquetas
□ Interfaz gráfica (GUI)
□ Logs en archivo separado
□ Configuración desde archivo externo
□ Soporte para múltiples WordPress
□ Verificación de enlaces rotos

SI ENCUENTRAS UN ERROR:
-----------------------
1. Anota el mensaje de error completo
2. Verifica que el documento Word tenga el formato correcto
3. Revisa los requisitos previos
4. Consulta la sección "Resolución de Problemas"
5. Verifica que WordPress y los plugins estén actualizados

================================================================================
17. AGRADECIMIENTOS Y CRÉDITOS
================================================================================

TECNOLOGÍAS UTILIZADAS:
-----------------------
- Python 3.9+
- Selenium WebDriver
- python-docx
- Google Chrome / ChromeDriver
- WordPress + Gutenberg

LIBRERÍAS OPEN SOURCE:
----------------------
- Selenium: Automatización de navegadores web
- python-docx: Lectura de documentos Microsoft Word
- Chrome DevTools: Inspección de elementos web

================================================================================
18. INFORMACIÓN LEGAL
================================================================================

USO RESPONSABLE:
----------------
- Este script es para uso personal/profesional legítimo
- No uses para spam o contenido no autorizado
- Respeta los términos de servicio de tu hosting
- Mantén actualizados tus sistemas de seguridad
- Protege tus credenciales de acceso

DESCARGO DE RESPONSABILIDAD:
---------------------------
- El script se proporciona "tal cual"
- Usa bajo tu propia responsabilidad
- Haz backups antes de usar
- Prueba en entorno de desarrollo primero
- No nos hacemos responsables de pérdida de datos

================================================================================
                       ¡ÉXITO EN TU AUTOMATIZACIÓN!
================================================================================

Este script te ahorrará horas de trabajo manual. Úsalo sabiamente y siempre
revisa los borradores antes de publicar. La automatización es una herramienta
poderosa, pero la revisión humana sigue siendo esencial para contenido de calidad.

¡Feliz automatización! 🚀

================================================================================
                            FIN DE LA DOCUMENTACIÓN
================================================================================

